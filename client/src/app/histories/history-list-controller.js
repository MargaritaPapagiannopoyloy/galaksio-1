(function(){var app=angular.module("histories.controllers.history-list",["ui.bootstrap","common.dialogs","ui.router","histories.services.history-list","histories.directives.history-list"]);app.controller("HistoryListController",function($state,$rootScope,$scope,$http,$uibModal,$dialogs,HistoryList,APP_EVENTS){this.setDisplayedHistory=function(history,force){$scope.displayedHistory=history;if(history===undefined){return}if(history.content===undefined||force===true){$http($rootScope.getHttpRequestConfig("GET","datasets-list",{extra:history.id})).then(function successCallback(response){$scope.displayedHistory.content=response.data},function errorCallback(response){debugger;var message="Failed when retrieving the list of datasets for displayed history.";$dialogs.showErrorDialog(message,{logMessage:message+" at HistoryListController:setDisplayedHistory."});console.error(response.data)})}return this};this.setCurrentHistory=function(history){$scope.currentHistory=history;Cookies.remove("current-history",{path:window.location.pathname});Cookies.set("current-history",history.id,{expires:1,path:window.location.pathname});return this};this.showUploadDatasetsDialog=function(){$scope.active=1;$scope.hiddenTabs=[0];$scope.files=$scope.files||[];var modalInstance=$uibModal.open({templateUrl:"app/datasets/dataset-selector-dialog.tpl.html",scope:$scope,size:"lg"});return this};this.retrieveAllHistoriesList=function(force,lite,callback){if($scope.histories.length===0||force===true){$scope.isLoading=true;$http($rootScope.getHttpRequestConfig("GET","history-list")).then(function successCallback(response){$scope.isLoading=false;$scope.histories=HistoryList.setHistories(response.data).getHistories();if(lite!==true){for(var i in $scope.histories){me.retrieveHistoryData($scope.histories[i].id)}}if(callback!==undefined){callback(force)}},function errorCallback(response){$scope.isLoading=false;debugger;var message="Failed when retrieving the list of histories.";$dialogs.showErrorDialog(message,{logMessage:message+" at HistoryListController:retrieveAllHistoriesList."});console.error(response.data)})}else{if(callback!==undefined){callback()}}return this};this.retrieveCurrentHistoryData=function(force){if($scope.histories.length===0){this.retrieveAllHistoriesList(true,true,me.retrieveCurrentHistoryData);return this}if(Cookies.get("current-history")===undefined){$scope.isLoading=true;$http($rootScope.getHttpRequestConfig("GET","history-list",{extra:"most_recently_used"})).then(function successCallback(response){$scope.isLoading=false;me.setCurrentHistory(HistoryList.getHistory(response.data.id));me.retrieveHistoryData(response.data.id,function(){me.setDisplayedHistory($scope.currentHistory,force)})},function errorCallback(response){$scope.isLoading=false;debugger;var message="Failed when retrieving the most recently used history.";$dialogs.showErrorDialog(message,{logMessage:message+" at HistoryListController:retrieveCurrentHistoryData."});console.error(response.data)})}else if(force==true){$scope.currentHistory=HistoryList.getHistory(Cookies.get("current-history"));me.retrieveHistoryData(Cookies.get("current-history"),function(){me.setDisplayedHistory($scope.currentHistory,force)})}else{$scope.currentHistory=HistoryList.getHistory(Cookies.get("current-history"));me.setDisplayedHistory($scope.currentHistory)}return this};this.retrieveHistoryData=function(history_id,callback){$scope.isLoading=true;$http($rootScope.getHttpRequestConfig("GET","history-list",{extra:history_id})).then(function successCallback(response){$scope.isLoading=false;var history=HistoryList.getHistory(history_id);if(history!==null){for(var attrname in response.data){history[attrname]=response.data[attrname]}}if(callback!==undefined){callback()}},function errorCallback(response){$scope.isLoading=false;debugger;var message="Failed when retrieving the details for history.";$dialogs.showErrorDialog(message,{logMessage:message+" at HistoryListController:retrieveHistoryData."});console.error(response.data)});return this};$scope.$on(APP_EVENTS.historyChanged,function(event,args){me.setDisplayedHistory($scope.currentHistory,true)});var me=this;$scope.histories=HistoryList.getHistories();if($state.current.name==="histories"){this.retrieveAllHistoriesList(true,false,this.retrieveCurrentHistoryData)}else if($state.current.name==="workflowDetail"){this.retrieveAllHistoriesList(false,false,this.retrieveCurrentHistoryData)}else if($state.current.name==="home"){this.retrieveCurrentHistoryData()}})})();